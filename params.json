{"name":"Twinlife-doc","tagline":"Organization of the Twinlife services API","body":"### Welcome to the Twinlife GitHub Pages.\r\n\r\nTwinlife services APIs are available for the following native target environments (system/language/SDK):\r\n* Android: Java\r\n* iOS: Objective C\r\n* Web applications: Javascript and Web Components\r\n\r\nFor each target environment, Twinlife services APIs are organized as a hierarchy along the following levels:\r\n* Twinlife Base Services APIs: generic twinlife platform services\r\n* Twinlife Add-on Services APIs: services specific to a particular application or extensions to the Twinlife Base Services.\r\n\r\n### Twinlife Base Services\r\n\r\n####Management Services\r\n* Configuration\r\n* Events\r\n* Notifications\r\n* Reports\r\n\r\n####Account Services\r\n* Sign Up\r\n* Sign In\r\n* Sign Out\r\n\r\n####Connectivity Services\r\n* Application connection/disconnection\r\n* To Server\r\n* To Internet\r\n\r\n####XMPP Roster Services\r\n* Contacts\r\n* Groups\r\n* Invitations\r\n\r\n####XMPP Chat Services\r\n* Text chat messages\r\n\r\n####Directory Services\r\n* Name to Object directory (LDAP style)\r\n\r\n####Repository Services\r\n* Object data base (based on PostgreSQL)\r\n* Distributed fine grain mobile objects management\r\n\r\n####WebRTC Services\r\n* Peer connection\r\n* Media stream\r\n* Data channel\r\n\r\n####Twincode Services\r\n* Twincode Factory\r\n* Twincode IN\r\n* Twincode OUT\r\n* Twincode Switch\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}